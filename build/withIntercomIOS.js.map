{"version":3,"file":"withIntercomIOS.js","sourceRoot":"","sources":["../src/withIntercomIOS.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAIrE,MAAM,CAAC,MAAM,eAAe,GAAsC,CAChE,MAAM,EACN,EAAE,KAAK,EAAE,SAAS,EAAE,EACpB,EAAE;IACF,MAAM,GAAG,uBAAuB,CAAC,MAAM,EAAE;QACvC,MAAM,EAAE,SAAmB;QAC3B,KAAK;KACN,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAG/B,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;IACjC,OAAO,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QAC3C,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;QAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;QAEhC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEnC,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAC3C,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CACtC,CAAC;QACF,MAAM,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAC9C,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CACxC,CAAC;QAEF,UAAU,CAAC,QAAQ,GAAG;YACpB,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;YAClC,4BAA4B;YAC5B,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,CAAC;YACnD,yFAAyF;YACzF,kCAAkC,MAAM,iBAAiB,KAAK,KAAK;YACnE,uFAAuF;YACvF,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC;SACnC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,OAAO,GAAG,CAAC;IACb,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { ConfigPlugin, withAppDelegate } from \"@expo/config-plugins\";\n\nimport type { IntercomPluginProps } from \"./withIntercom\";\n\nexport const withIntercomIOS: ConfigPlugin<IntercomPluginProps> = (\n  config,\n  { appId, iosApiKey }\n) => {\n  config = withIntercomAppDelegate(config, {\n    apiKey: iosApiKey as string,\n    appId,\n  });\n  return config;\n};\n\nexport const withIntercomAppDelegate: ConfigPlugin<{\n  apiKey: string;\n  appId: string;\n}> = (config, { apiKey, appId }) => {\n  return withAppDelegate(config, async (cfg) => {\n    const { modResults } = cfg;\n    const { contents } = modResults;\n\n    const lines = contents.split(\"\\n\");\n\n    const importIndex = lines.findIndex((line) =>\n      /^#import \"AppDelegate.h\"/.test(line)\n    );\n    const didLaunchIndex = lines.findIndex((line) =>\n      /self.moduleName = @\"main\";/.test(line)\n    );\n\n    modResults.contents = [\n      ...lines.slice(0, importIndex + 1),\n      \"#import <IntercomModule.h>\",\n      ...lines.slice(importIndex + 1, didLaunchIndex + 1),\n      '  // @generated begin config-plugin-react-native-intercom-didFinishLaunchingWithOptions',\n      `  [IntercomModule initialize:@\"${apiKey}\" withAppId:@\"${appId}\"];`,\n      '  // @generated end config-plugin-react-native-intercom-didFinishLaunchingWithOptions',\n      ...lines.slice(didLaunchIndex + 1),\n    ].join(\"\\n\");\n\n    return cfg;\n  });\n};\n"]}